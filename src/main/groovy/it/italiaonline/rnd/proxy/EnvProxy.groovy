package it.italiaonline.rnd.proxy

import java.net.Proxy.Type

/**
 * This Groovy source file was auto generated by 'gigawatt'
 * @author d7392
 * @date 01-08-2018 12.55
 */
class EnvProxy {

	private final String proxyString

	EnvProxy(String ps) {
		this.proxyString = ps
	}

	Proxy.Type type() {
		def type
		if ( this.proxyString == null )
			type = Proxy.Type.DIRECT
		else if ( this.proxyString ==~ 'http://[^:]+:[1-9][0-9]{0,4}' )
			type = Proxy.Type.HTTP
		else if ( this.proxyString ==~ 'socks[45]://[^:]+:[1-9][0-9]{0,4}' )
			type = Proxy.Type.SOCKS
		else
			throw new UnsupportedOperationException("Invalid proxy type '${this.proxyString}'")
	}

	String host() {
		def host
		switch( this.type() ) {
			case Proxy.Type.HTTP:
				host = this.proxyString.find($/(?<=^http://)[^:]+/$)
				break
			case Proxy.Type.SOCKS:
				host = this.proxyString.find($/(?<=^socks[45]://)[^:]+/$)
				break
			case Proxy.Type.DIRECT:
				throw new UnsupportedOperationException('Cannot return a host with Proxy.Type.DIRECT')
		}
		return host
	}

	Integer port() {
		if ( this.type() == Proxy.Type.DIRECT )
			throw new UnsupportedOperationException('Cannot return a port with Proxy.Type.DIRECT')

		return this.proxyString.find($/(?<=:)[1-9][0-9]{0,4}/$) as Integer
	}
}
