package it.italiaonline.rnd.proxy

import spock.lang.*
import it.italiaonline.rnd.specification.Environment

/**
 * This Spock specification was auto generated by 'gigawatt'
 * @author d7392
 * @date 01-08-2018 12.55
 */
class EnvProxySpec extends Specification {

	def "Should correctly read the proxy from the environment variable http_proxy"() {
		setup:
			new Environment (
				http_proxy: 'http://proxy-dmz.pgol.net:8080'
			).insert()
		when:
			def envProxy = new EnvProxy(Protocol.HTTP)
		then:
			envProxy.type() == Proxy.Type.HTTP
			envProxy.host() == 'proxy-dmz.pgol.net'
			envProxy.port() == 8080
	}

	def "Should raise an exception if the environment variable contains an invalid proxy"() {
		setup:
			new Environment (
				all_proxy: all_proxy
			).insert()
		when:
			new EnvProxy(Protocol.ALL).type()
		then:
			def exception = thrown(UnsupportedOperationException)
			exception.message == "Invalid proxy type '${all_proxy}'"
		where:
			all_proxy << [ 'https://proxy-dmz.pgol.net', 'proxy-dmz.pgol.net', '123stella', '_', '   ', '' ]
	}

	def "Should raise an exception if a host is requested with a Proxy.Type.DIRECT"() {
		setup:
			def envProxy = new EnvProxy(Protocol.FTP) // no ftp_proxy set
		expect:
			envProxy.type() == Proxy.Type.DIRECT
		when:
			envProxy.host()
		then:
			def exception = thrown(UnsupportedOperationException)
			exception.message == 'Cannot return a host with Proxy.Type.DIRECT'
		when:
			envProxy.port()
		then:
			exception = thrown(UnsupportedOperationException)
			exception.message == 'Cannot return a port with Proxy.Type.DIRECT'
	}

}
